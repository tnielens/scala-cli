"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5672],{3905:function(e,a,t){t.d(a,{Zo:function(){return p},kt:function(){return d}});var l=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)t=r[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=l.createContext({}),c=function(e){var a=l.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},p=function(e){var a=c(e.components);return l.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},m=l.forwardRef((function(e,a){var t=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=c(t),d=n,k=m["".concat(s,".").concat(d)]||m[d]||u[d]||r;return t?l.createElement(k,i(i({ref:a},p),{},{components:t})):l.createElement(k,i({ref:a},p))}));function d(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var r=t.length,i=new Array(r);i[0]=m;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<r;c++)i[c]=t[c];return l.createElement.apply(null,i)}return l.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4109:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var l=t(7462),n=t(3366),r=(t(7294),t(3905)),i=["components"],o={title:"Package",sidebar_position:8},s=void 0,c={unversionedId:"commands/package",id:"commands/package",isDocsHomePage:!1,title:"Package",description:"The package command can package your Scala code in various formats, such as:",source:"@site/docs/commands/package.md",sourceDirName:"commands",slug:"/commands/package",permalink:"/docs/commands/package",editUrl:"https://github.com/Virtuslab/scala-cli/edit/master/website/docs/commands/package.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Package",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Test",permalink:"/docs/commands/test"},next:{title:"REPL",permalink:"/docs/commands/repl"}},p=[{value:"Default package format",id:"default-package-format",children:[],level:2},{value:"Library JARs",id:"library-jars",children:[],level:2},{value:"Assemblies",id:"assemblies",children:[],level:2},{value:"Docker container",id:"docker-container",children:[],level:2},{value:"Scala.JS",id:"scalajs",children:[],level:2},{value:"Scala Native",id:"scala-native",children:[],level:2},{value:"OS-specific packages",id:"os-specific-packages",children:[{value:"Debian",id:"debian",children:[{value:"Mandatory arguments",id:"mandatory-arguments",children:[],level:4},{value:"Optional arguments",id:"optional-arguments",children:[],level:4}],level:3},{value:"RedHat",id:"redhat",children:[{value:"Mandatory arguments",id:"mandatory-arguments-1",children:[],level:4},{value:"Optional arguments",id:"optional-arguments-1",children:[],level:4}],level:3},{value:"macOS (PKG)",id:"macos-pkg",children:[{value:"Mandatory arguments",id:"mandatory-arguments-2",children:[],level:4},{value:"Optional arguments",id:"optional-arguments-2",children:[],level:4}],level:3},{value:"Windows",id:"windows",children:[{value:"Mandatory arguments",id:"mandatory-arguments-3",children:[],level:4},{value:"Optional arguments",id:"optional-arguments-3",children:[],level:4}],level:3}],level:2}],u={toc:p};function m(e){var a=e.components,t=(0,n.Z)(e,i);return(0,r.kt)("wrapper",(0,l.Z)({},u,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"package")," command can package your Scala code in various formats, such as:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#default-package-format"},"lightweight launcher JARs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#library-jars"},"standard library JARs")),(0,r.kt)("li",{parentName:"ul"},"so called ",(0,r.kt)("a",{parentName:"li",href:"#assemblies"},'"assemblies" or "fat JARs"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#docker-container"},"docker container")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#scalajs"},"JavaScript files")," for Scala.JS code"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#scala-native"},"native executables")," for Scala Native code"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#os-specific-packages"},"OS-specific formats"),", such as deb or rpm (Linux), pkg (macOS), or MSI (Windows)")),(0,r.kt)("h2",{id:"default-package-format"},"Default package format"),(0,r.kt)("p",null,"The default package format writes a ",(0,r.kt)("em",{parentName:"p"},"lightweight launcher JAR"),', like the "bootstrap" JAR files ',(0,r.kt)("a",{parentName:"p",href:"https://get-coursier.io/docs/cli-bootstrap#bootstraps"},"generated by coursier"),".\nThese JARs tend to have a small size (mostly containing only the byte code from your own sources),\ncan be generated fast,\nand download their dependencies upon first launch, via ",(0,r.kt)("a",{parentName:"p",href:"https://get-coursier.io"},"coursier"),"."),(0,r.kt)("p",null,"These can be copied onto other machines, and will run fine there.\nTheir only requirement is that the ",(0,r.kt)("inlineCode",{parentName:"p"},"java")," command needs to be available in the ",(0,r.kt)("inlineCode",{parentName:"p"},"PATH"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Hello.scala",title:"Hello.scala"},'object Hello {\n  def main(args: Array[String]): Unit =\n    println("Hello")\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli package Hello.scala -o hello\n./hello\n# Hello\n")),(0,r.kt)("h2",{id:"library-jars"},"Library JARs"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Library JARs")," are suitable if you plan to put the resulting JAR in a class path, rather than running it as is.\nThese follow the same format as the JARs of libraries published to Maven Central:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=MyLibrary.scala",title:"MyLibrary.scala"},'package mylib\n\nclass MyLibrary {\n  def message = "Hello"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'scala-cli package MyLibrary.scala -o my-library.jar --library\njavap -cp my-library.jar mylib.MyLibrary\n# Compiled from "MyLibrary.scala"\n# public class mylib.MyLibrary {\n#   public java.lang.String message();\n#   public mylib.MyLibrary();\n# }\n')),(0,r.kt)("h2",{id:"assemblies"},"Assemblies"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Assemblies")," blend your dependencies and your sources' byte code together in a single JAR file.\nAs a result, assemblies can be run as is, just like ",(0,r.kt)("a",{parentName:"p",href:"#default-package-format"},"bootstraps"),", but don't need to download\nanything upon first launch.\nBecause of that, assemblies also tend to be bigger, and somewhat slower to generate:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=Hello.scala",title:"Hello.scala"},'object Hello {\n  def main(args: Array[String]): Unit =\n    println("Hello")\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli package Hello.scala -o hello --assembly\n./hello\n# Hello\n")),(0,r.kt)("h2",{id:"docker-container"},"Docker container"),(0,r.kt)("p",null,"Scala CLI can create an executable application and package it into a docker image."),(0,r.kt)("p",null," For example, here\u2019s an application that will be executed in a docker container:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=HelloDocker.scala",title:"HelloDocker.scala"},'object HelloDocker extends App {\n    println("Hello from Docker")\n}\n')),(0,r.kt)("p",null,"Passing ",(0,r.kt)("inlineCode",{parentName:"p"},"--docker")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"package")," sub-command generates a docker image.\nThe docker image name parameter ",(0,r.kt)("inlineCode",{parentName:"p"},"--docker-image-repository")," is mandatory."),(0,r.kt)("p",null,"The following command generates a ",(0,r.kt)("inlineCode",{parentName:"p"},"hello-docker")," image with the ",(0,r.kt)("inlineCode",{parentName:"p"},"latest")," tag:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli package --docker HelloDocker.scala --docker-image-repository hello-docker\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker run hello-docker\n# Hello from Docker\n")),(0,r.kt)("p",null,"You can also create Docker images for the Scala JS and Scala Native environments.\nThis command shows how to create a Docker image (",(0,r.kt)("inlineCode",{parentName:"p"},"--docker"),") for a Scala JS (",(0,r.kt)("inlineCode",{parentName:"p"},"--js"),") application:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli package --js --docker HelloDocker.scala --docker-image-repository hello-docker\n")),(0,r.kt)("p",null,"Packaging Scala Native applications to a Docker image is only supported on Linux."),(0,r.kt)("p",null," This command shows how to do that:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli package --native --docker HelloDocker.scala --docker-image-repository hello-docker\n")),(0,r.kt)("h2",{id:"scalajs"},"Scala.JS"),(0,r.kt)("p",null,"Packaging Scala.JS applications results in a ",(0,r.kt)("inlineCode",{parentName:"p"},".js")," file, that can be run with ",(0,r.kt)("inlineCode",{parentName:"p"},"node"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=HelloJs.scala",title:"HelloJs.scala"},'object Hello {\n  def main(args: Array[String]): Unit =\n    println("Hello")\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli package --js HelloJs.scala -o hello.js\nnode hello.js\n# Hello\n")),(0,r.kt)("p",null,"Note that the Scala CLI doesn't offer to link the resulting JavaScript with linkers, such as Webpack (yet)."),(0,r.kt)("h2",{id:"scala-native"},"Scala Native"),(0,r.kt)("p",null,"Packaging a Scala Native application results in a native executable:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=HelloNative.scala",title:"HelloNative.scala"},'object Hello {\n  def main(args: Array[String]): Unit =\n    println("Hello")\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli package --native HelloNative.scala -S 2.13.6 -o hello\nfile hello\n# hello: Mach-O 64-bit executable x86_64\n./hello\n# Hello\n")),(0,r.kt)("h2",{id:"os-specific-packages"},"OS-specific packages"),(0,r.kt)("p",null,"Scala CLI also lets you package Scala code as OS-specific packages.\nThis feature is somewhat experimental, and supports the following formats, provided they're compatible with the operating system you're running ",(0,r.kt)("inlineCode",{parentName:"p"},"scala-cli")," on:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#debian"},"DEB")," (Linux)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#redhat"},"RPM")," (Linux)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#macos-pkg"},"PKG")," (macOS)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#windows"},"MSI")," (Windows)")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"Hello.scala","Hello.scala":!0},'object Hello {\n  def main(args: Array[String]): Unit =\n    println("Hello")\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli package --deb Hello.scala -o hello.deb\nfile hello\n# hello: Mach-O 64-bit executable x86_64\n./hello\n# Hello\n")),(0,r.kt)("h3",{id:"debian"},"Debian"),(0,r.kt)("p",null,"DEB is the package format for the Debian Linux distribution.\nTo build a Debian package, you will need to have ",(0,r.kt)("a",{parentName:"p",href:"http://manpages.ubuntu.com/manpages/trusty/pl/man1/dpkg-deb.1.html"},(0,r.kt)("inlineCode",{parentName:"a"},"dpkg-deb"))," installed."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli package --deb --output 'path.deb' Hello.scala\n")),(0,r.kt)("h4",{id:"mandatory-arguments"},"Mandatory arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"version"),(0,r.kt)("li",{parentName:"ul"},"maintainer"),(0,r.kt)("li",{parentName:"ul"},"description"),(0,r.kt)("li",{parentName:"ul"},"output-path")),(0,r.kt)("h4",{id:"optional-arguments"},"Optional arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"force"),(0,r.kt)("li",{parentName:"ul"},"launcher-app"),(0,r.kt)("li",{parentName:"ul"},"debian-conflicts"),(0,r.kt)("li",{parentName:"ul"},"debian-dependencies"),(0,r.kt)("li",{parentName:"ul"},"architecture")),(0,r.kt)("h3",{id:"redhat"},"RedHat"),(0,r.kt)("p",null,"RPM is the software package format for RedHat distributions.\nTo build a RedHat Package, you will need to have ",(0,r.kt)("a",{parentName:"p",href:"https://linux.die.net/man/8/rpmbuild"},(0,r.kt)("inlineCode",{parentName:"a"},"rpmbuild"))," installed."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"scala-cli package --rpm --output 'path.rpm' Hello.scala\n")),(0,r.kt)("h4",{id:"mandatory-arguments-1"},"Mandatory arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"version"),(0,r.kt)("li",{parentName:"ul"},"description"),(0,r.kt)("li",{parentName:"ul"},"license"),(0,r.kt)("li",{parentName:"ul"},"output-path")),(0,r.kt)("h4",{id:"optional-arguments-1"},"Optional arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"force"),(0,r.kt)("li",{parentName:"ul"},"launcher-app"),(0,r.kt)("li",{parentName:"ul"},"release"),(0,r.kt)("li",{parentName:"ul"},"rpm-architecture")),(0,r.kt)("h3",{id:"macos-pkg"},"macOS (PKG)"),(0,r.kt)("p",null,"PKG is the software package format for macOs.\nTo build a PKG you will need to have ",(0,r.kt)("a",{parentName:"p",href:"https://www.unix.com/man-page/osx/1/pkgbuild/"},(0,r.kt)("inlineCode",{parentName:"a"},"pkgbuild"))," installed. "),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"`scala-cli package --pkg --output 'path.pkg` Hello.scala\n")),(0,r.kt)("h4",{id:"mandatory-arguments-2"},"Mandatory arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"version"),(0,r.kt)("li",{parentName:"ul"},"identifier"),(0,r.kt)("li",{parentName:"ul"},"output-path")),(0,r.kt)("h4",{id:"optional-arguments-2"},"Optional arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"force"),(0,r.kt)("li",{parentName:"ul"},"launcher-app")),(0,r.kt)("h3",{id:"windows"},"Windows"),(0,r.kt)("p",null,"MSI is the software package format for Windows distributions.\nTo build a Windows installer, you will need to have ",(0,r.kt)("a",{parentName:"p",href:"https://wixtoolset.org/"},(0,r.kt)("inlineCode",{parentName:"a"},"WIX Toolset"))," installed."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cmd"},"scala-cli package --msi --output 'path.msi` Hello.scala\n")),(0,r.kt)("h4",{id:"mandatory-arguments-3"},"Mandatory arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"version"),(0,r.kt)("li",{parentName:"ul"},"maintainer"),(0,r.kt)("li",{parentName:"ul"},"licence-path"),(0,r.kt)("li",{parentName:"ul"},"product-name"),(0,r.kt)("li",{parentName:"ul"},"output-path")),(0,r.kt)("h4",{id:"optional-arguments-3"},"Optional arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"force"),(0,r.kt)("li",{parentName:"ul"},"launcher-app"),(0,r.kt)("li",{parentName:"ul"},"exit-dialog"),(0,r.kt)("li",{parentName:"ul"},"logo-path")))}m.isMDXComponent=!0}}]);