"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4753],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9925:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=n.p+"assets/images/vscode-run-b7c05071cc98cb3dc8d8e305ea22b29d.png",l=n.p+"assets/images/vscode-test-c56e6bf70fcc9d1410bd952ee6843ca4.png",s=["components"],c={title:"Setup ScalaCLI project in VSCode",sidebar_position:7},p=void 0,u={unversionedId:"cookbooks/vscode",id:"cookbooks/vscode",isDocsHomePage:!1,title:"Setup ScalaCLI project in VSCode",description:"Scala CLI can generate the files that are necessary for providing IDE support in Visual Studio Code.",source:"@site/docs/cookbooks/vscode.md",sourceDirName:"cookbooks",slug:"/cookbooks/vscode",permalink:"/docs/cookbooks/vscode",editUrl:"https://github.com/Virtuslab/scala-cli/edit/master/website/docs/cookbooks/vscode.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Setup ScalaCLI project in VSCode",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Sharing and testing code with GitHub gists",permalink:"/docs/cookbooks/gists"},next:{title:"Command-line options",permalink:"/docs/reference/cli-options"}},d=[],m={toc:d};function f(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Scala CLI can generate the files that are necessary for providing IDE support in Visual Studio Code."),(0,a.kt)("p",null,"For example, here is a simple project in scala-cli which contains only one main and test class. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=HelloWorld.scala",title:"HelloWorld.scala"},'@main \n    def hello() = println("Hello, world")\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-scala",metastring:"title=MyTests.test.scala",title:"MyTests.test.scala"},'// using lib org.scalameta::munit::1.0.0-M1\n\nclass MyTests extends munit.FunSuite {\n  test("test") {\n    val x = 2\n    assertEquals(x, 2)\n  }\n}\n')),(0,a.kt)("p",null,"The following command generates configurations files for VSCode support:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"scala-cli setup-ide .\n")),(0,a.kt)("p",null,"There is also another way. The first time you run the ",(0,a.kt)("inlineCode",{parentName:"p"},"run"),"|",(0,a.kt)("inlineCode",{parentName:"p"},"compile"),"|",(0,a.kt)("inlineCode",{parentName:"p"},"test")," commands, the configuration files for the VSCode will be also generated."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'scala-cli run .\n# "Hello, world"\n')),(0,a.kt)("p",null,"and then, we launch Visual Studio Code "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash",metastring:"ignore",ignore:!0},"code .\n")),(0,a.kt)("p",null,"After starting metals, you will see ",(0,a.kt)("inlineCode",{parentName:"p"},"run/debug")," buttons in ",(0,a.kt)("inlineCode",{parentName:"p"},"HelloWorld.scala")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"test/debug")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"MyTests.test.scala"),"."),(0,a.kt)("p",null,"Pressing the ",(0,a.kt)("inlineCode",{parentName:"p"},"run")," button will run the ",(0,a.kt)("inlineCode",{parentName:"p"},"Main.scala"),", the output will be visible in ",(0,a.kt)("inlineCode",{parentName:"p"},"DebugConsole"),"."),(0,a.kt)("img",{src:i}),(0,a.kt)("p",null,"And the similar effect after pressing the ",(0,a.kt)("inlineCode",{parentName:"p"},"test")," button."),(0,a.kt)("img",{src:l}))}f.isMDXComponent=!0}}]);